# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11CtJUOz4g4QFI6NzoWf7D9YOESnuBS8P
"""

# Step 1: Install required libraries


# Step 2: Import libraries
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import joblib
import mlflow
import mlflow.sklearn

df = pd.read_csv("survey.csv")



# Step 2: Import libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import joblib
import mlflow
import mlflow.sklearn

# Step 3: Load dataset

df = pd.read_csv(r"C:\Users\Muhammad Abuzar\Desktop\ml-app\ml\survey.csv")


df = df[['Age', 'Gender', 'family_history', 'work_interfere', 'benefits', 'care_options', 'seek_help', 'mental_health_consequence', 'treatment']]
df = df.dropna()

df

le = LabelEncoder()
for col in df.columns:
    df[col] = le.fit_transform(df[col])

# Step 6: Define features & labels
X = df.drop('treatment', axis=1)
y = df['treatment']

# Step 7: Split & train
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
model = RandomForestClassifier()
model.fit(X_train, y_train)

# Step 8: Evaluate
predictions = model.predict(X_test)
accuracy = accuracy_score(y_test, predictions)
print("Accuracy:", accuracy)

# Step 9: Save model
joblib.dump(model, 'model.pkl')

# Step 10: Track with MLflow (optional for local use)
with mlflow.start_run():
    mlflow.log_param("model", "RandomForest")
    mlflow.log_metric("accuracy", accuracy)
    mlflow.sklearn.log_model(model, "model")

import mlflow
import mlflow.sklearn

with mlflow.start_run():
    mlflow.log_param("model", "RandomForest")
    mlflow.log_metric("accuracy", accuracy)
    mlflow.sklearn.log_model(model, "model")